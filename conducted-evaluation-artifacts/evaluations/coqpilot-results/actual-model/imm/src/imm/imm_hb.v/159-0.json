{
  "thm": {
    "project": {
      "dir_name": "imm",
      "split": {
        "dir_name": "coqpilot-repos",
        "thm_dir_name": "coqpilot-theorems"
      },
      "commit_hash": null,
      "compile_args": []
    },
    "path": "src/imm/imm_hb.v",
    "theorem_start_pos": {
      "line": 159,
      "column": 0
    },
    "theorem_end_pos": {
      "line": 159,
      "column": 66
    },
    "proof_start_pos": {
      "line": 160,
      "column": 0
    },
    "proof_end_pos": {
      "line": 165,
      "column": 4
    },
    "hash": "dd53c0701008d0212d9581ac3ca03892e8a1287e085d1554e0abc6d4feb3fc91"
  },
  "proof": "\nProof using.\nunfold rel, release at 2 4 6 20.\nrewrite (rtE (WF)).\ntype_solver.\narewrite (\u2997W \u2229\u2081 Rel\u2998 \u2a3e \u2997W \u2229\u2081 Rel\u2990 \u2286 release).\nunfold release.\nrelsf; unionR right -> right. rewrite (rel_r (@wf_rbE WF)).\nrewrite <-(sb_in_hb (\u2997F\u2998 \u2a3e sb)^? \u2a3e rs).\nsin_rewrite rel_rmw_rsE.\nrewrite <- (rel_r (WF)).\nsin_solve_by_id; subst.\napply rel_s_rel1.\narewrite (@wf_rsW G).\nrewrite <- rel_sb_co_trans.\nrewrite <- (rel_s (@wf_rmwE WF)).\napply rel_s_seq. ins. desf; eauto.\nrewrite <- seq_union_r, <- !seq_union_l.\nrewrite rel_rs_rel1.\nrewrite (cr_rs_rel WF).\narewrite (\u2997Rel\u2998 \u2a3e (\u2997F\u2998 \u2a3e sb)^? \u2a3e rs \u2a3e (\u2997W \u2229\u2081 Rel\u2998 \u222a \u2997E\u2998) \u2286 (\u2997W \u2229\u2081 Rel\u2990 \u2a3e \u2997W \u2229\u2081 Rel\u2990 \u2286 \u2997W \u2229\u2081 Rel\u2990)).\neapply ct_compat.\nrewrite <- rel_rs_rel1.\nsin_solve_by_id; subst.\nrewrite (cr_rsW WF), <- rel_sb_co_trans.\nrewrite (rel_sb_co_trans WF).\nrewrite (cr_rs_rel WF).\nrewrite <- rel_rs_rel1.\nrewrite seqA.\nrewrite (@sw_in_ar_helper WF).\nassert (sw: \u2997W\u2998 \u222a \u2997E\u2998 \u2a3e \u2997W\u2998 \u222a \u2997E\u2998 \u2286 (\u2997W \u2229\u2081 Rel\u2998 \u222a \u2997E\u2990)^?). {\n  rewrite (rel_s). desf.\n  unfold sw.\n  sin_solve_by_id; subst.\n  rewrite (rel_sub_ct_seq WF).\n  rewrite (rel_s).\n  assert (sub1 := sb_in_hb).\n  sin_solve_by_id; subst.\n  specialize (sub1 := (sb \u2286 hb)^?).\n  apply (comp_eq_setW1_union (sub1 _ (hb_in_2 hb))).\n  unfold rs, rs'; arewrite (\u2997Rel\u2998 \u2229\u2081 (rs\u2a3e \u2997E\u2a3e rs) \u2a3e (sb \u2a3e _ \u2229\u2081 _)^? \u2261 rs).\n  symmetry. neself.\n  apply @rel_s_sprop.\n  rewrite <- (rel_s1 _ (sub1 _ (hb_in_2 hb))).\n  symmetry. apply @rel_s_sprop.\n  rewrite <- (sub1 \u222a\u2081 sw).\n  rewrite <- @rel_cs1_ct_seq_r1.\n  hnf. unionR.\n  { rewrite rel_cs1_ct_seq_r1, <- rel_sub_ct_seq; eauto.\n    neself.\n    unfold rs.\n    rewrite (seqA (\u2997E\u2a3e \u2997W\u2998 \u222a sb\u2a3e sb)^?).\n    coset_sin_sin_trans.\n    rewrite (rel_s1 (sb\u2229same_loc\u2a3e\u2997W\u2998)).\n    rewrite rel_cs1_ct_seq_r1.\n    rewrite (rel_s _ _ (sb\u2229same_loc\u2a3erb\u2a3ermw)).\n    rewrite (rel_cs1_ct_seq_r1 _ _ (sb\u2229same_loc\u2a3erb\u2a3ermw)).\n    arewrite ((sb \u2a3e _ \u2229\u2081 _)^? \u2a3e \u2997W\u2998 \u2a3e rf\u2a3e rmw \u2286 sb\u2a3e sb\u2a3e sb\u2a3e rb\u2a3e sw).\n    rewrite (seqA (rb\u2a3e sw)).\n    rewrite <- rel_ext.\n    sin_solve_by_id; subst; type_solver.\n    intros ? ??. desf; type_solver.\n    type_solver.\n    cbn -[and].\n    fold_rel. fold_rel.\n    sin_solve_by_id.\n    type_solver.\n    neself; type_solver.\n    apply @sub_trans.\n    rewrite rel_sub_rr_ct_seq.\n    specialize (seq_union_r (\u2997F\u2998 \u2a3e sb)^? \u2a3e \u2997W\u2998 \u222a ((sb \u2229 same_loc)^? \u2a3e rf \u2a3e rmw)\uff09 in |- *.\n    rewrite sw_in_hb.\n    3: { subst.\n         rewrite <- (s_sw_in_ar_helper WF).\n         assert (I2 := ssw I).\n         rewrite I2.\n         rsubL' (sw: (sb \u2229 same_loc \u2a3e sw) 1\ufd2e \u2a3e \u2997W\u2998 \u2a3e release \u2260 nil).\n         rewrite ct_end.\n         setoid_rewrite sw_in_hb_helper.\n         arewrite (\u2997Rel\u2998 \u2a3e \u2997W\u2998 \u2a3e sb\u2a3e sb\u2a3e sb\u2a3e sw\u2a3e release \u222a \u2997W\u2998 \u2260 emptyset \u222a \u2997E\u2998).\n         ins.\n         cbn. fold_rel. fold_rel.\n         setoid_apply_rel.\n         type_solver.\n         type_solver.\n         type_solver.\n         rewrite (rw_mono_idem (F:=F)).\n         rewrite rel_bind.\n         type_solver.\n         type_solver.\n         type_solver.\n         rewrite rel_ext; intros ? ? ?. desf.\n         setoid_rewrite sw_in_hb_helper.\n         apply ssw_in_ar; type_solver.\n         setoid_rewrite sw_in_hb_helper.\n         ins.\n         cbn [ssw rel]. fold_rel.\n         rewrite sw_in_ar_helper.\n         setoid_rewrite <- sw_in_ar_helper.\n         rsubL' (ssw _ 2\ufd2e)%rel.\n         rename r0 into SL.\n         rsubL' (ssw (1\ufd2e) 2\ufd2e)%rel.\n         rename r0 into L.\n         rewrite rel_diff in SL.\n         rewrite rel_ext; try type_solver.\n         rewrite sub1.\n         setoid_rewrite rf.\n         rewrite pm_s.\n         rsubL' (sw: (sb \u2229 same_loc) 1\ufd2e \u2a3e sw)%rel.\n         rename r0 into SL.\n         rsubL' (sw: (sb \u2229 same_loc) 2\ufd2e \u2a3e sb \u2229 same_loc 2\ufd2e)%rel.\n         rename r0 into SL.\n         rewrite sub1 in SL.\n         rewrite rel_ext; type_solver.\n         rewrite sub1.\n         setoid_rewrite same_loc_swap.\n         rewrite sub1.\n         simpl. fold_rel. fold_rel. \n         type_solver.\n         type_solver.\n         type_solver.\n         type_solver.\n         type_solver.\n         rsubL (sw: (sb \u2229 same_loc))%rel.\n         fold_rel.\n         rsubL (sw: sb \u2229 same_loc)%rel.\n         rsubL' (S1w:=sw)%rel. rename r0 into SL.\n         subv SL. cbn [sindex1 sindex2].\n         rewrite ?actid_alt_isomorphic.\n         reflexivity.\n         ins; type_solver; type_solver; ext_tid_all; desf; try reflexivity.\n\n         (* SW/RF/RMW *)\n         intros l2 Hf1 ->. (* l2 ??= l2 \u2194 SW l2 /\\ RF l2 /\\ ??= RMW l2 *)\n         inversion Hf1.\n         rewrite ?actid_alt_isomorphic in Hf1. subst; unfold same_loc in Hf1.\n         specialize (Hf1' (tid_prop l2 Hf1 Ht)). desf.\n         rsub_n Hf1' (tid_prop l2 Hf1 Ht).\n         rsubL' (sw: (sw\u2a3e sw)\u2997F\u2998)%rel. fold_rel.\n         rsubL' (sw: (sw\u2a3e sw)\u2997W\u2998)%rel. fold_rel.\n         rsub_n' (sWRf:=sw\u2a3e sw)%rel.\n         fold_rel'. rewrite sWRf.\n         apply rel_ext'; type_solver; type_solver; try reflexivity.\n         unfold sw; inversion Hf1.\n         rsubL (sw: sw)%rel. fold_rel; try reflexivity.\n         ins; type_solver; reflexivity.\n         ins; fold_rel; try reflexivity.\n\n         (* SW *)\n         intros l2 Hf1 ->. (* l2 ??= l2 \u219d SW l2 /\\ RMWl2 l2^? /\\ ??= RMF l2 *)\n         inversion Hf1.\n         rewrite ?actid_alt_isomorphic in Hf1. subst; unfold same_loc in Hf1.\n         specialize (Hf1' (tid_prop l2 Hf1 Ht)). desf.\n         rsub_n Hf1' (tid_prop l2 Hf1 Ht).\n         rsubL' (swf: \u2997sw\u2997F\u2998)%rel. fold_rel.\n         rsubL' (sww: \u2997sw\u2997W\u2998)%rel. fold_rel.\n         apply rel_ext'; type_solver; type_solver; try reflexivity.\n         rsubL' (sWRf:=sw\u2a3e sw)%rel. rewrite <- sWRf. fold_rel'.\n         sub (rb:=rmw). fold_rel. apply rel_ext'; type_solver.\n         type_solver.\n         sub (rb:=rmw). fold_rel. sub (rb1:=rb). fold_rel.\n         ins; fold_rel'. type_solver. type_solver.\n         apply sub_trans with (sw:=\u2997sw\u2997F\u2998)%rel.\n         fold_rel. sub (rb:=sw). fold_rel'.\n         apply sub_trans with (sw:=\u2997sw\u2997W\u2998)%rel.\n         fold_rel. sub (rb:=sw). fold_rel.\n         apply sub_trans with (sw:=rb).\n         apply rmw_sub_same_s. fold_rel.\n\n         intros l2 Hf2 ->. (* l2 ??= l2 \u219d false /\\ (RMF \u2997sw)\u2997F\u2998 \u2a3e (Rf\u2997W) \u2997sw<- /\\ RMW\u2997E\u2997W *)\n         inversion Hf2.\n         rewrite ?actid_alt_isomorphic in Hf2. subst; unfold same_loc in Hf2.\n         specialize (Hf2' (tid_prop l2 Hf2 Ht)). desf.\n         rsub_n Hf2' (sw: \u2997sw\u2997F\u2998)%rel. fold_rel.\n         rsubL' (sWRf:=sw\u2a3e sw)%rel.  rewrite <- sWRf. fold_rel'.\n         sub (rb:=sb). fold_rel.\n         apply rel_ext'; type_solver; type_solver.\n         type_solver.\n         apply sub_trans with (sw:=\u2997sw\u2997W\u2998)%rel.\n         fold_rel. sub (rb:=sw). fold_rel.\n         type_solver.\n         apply sub_trans with (sw:=\u2997sw\u2997E\u2998)%rel.\n         rsub (wRfw:=\u2997W\u2997E\u2998)%rel (rb:=wRfw)%rel.\n         fold_rel. sub (rb:=sw). fold_rel.\n         type_solver; type_solver.\n         apply sub_trans with (sw:=\u2997W\u2998)%rel.\n         fold_rel. sub (rb:=sw). fold_rel.\n         cut (sw = W). { intros. subst. type_solver. type_solver. type_solver. type_solver. sol_bisel. destruct a. tauto.\n         type_solver; type_solver. type_solver. type_solver. }\nQed.",
  "time": 498.0734965801239,
  "n_attempts": 1
}
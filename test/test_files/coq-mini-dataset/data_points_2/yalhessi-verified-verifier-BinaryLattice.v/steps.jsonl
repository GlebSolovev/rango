{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 11, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\n  unfold RelationClasses.Reflexive.", "context": []}, "n_step": 1, "goals": ["RelationClasses.Reflexive BinaryRel"], "next_steps": [{"text": "\n  intros x.", "context": []}, {"text": " destruct x.", "context": []}, {"text": " apply top_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " apply bot_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " \nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 11, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\n  intros x.", "context": []}, "n_step": 2, "goals": ["forall x : BinarySet, BinaryRel x x"], "next_steps": [{"text": " destruct x.", "context": []}, {"text": " apply top_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " apply bot_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " \nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 11, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": " destruct x.", "context": []}, "n_step": 3, "goals": ["x: BinarySet\n\nBinaryRel x x"], "next_steps": [{"text": " apply top_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " apply bot_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " \nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 11, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": " apply top_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "n_step": 4, "goals": ["BinaryRel top top", "BinaryRel bottom bottom"], "next_steps": [{"text": " apply bot_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": " \nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 11, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": " apply bot_rel.", "context": [{"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "n_step": 5, "goals": ["BinaryRel bottom bottom"], "next_steps": [{"text": " \nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 11, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": " \nDefined.", "context": []}, "n_step": 6, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 15, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["x, y: BinarySet\nH: BinaryRel x y\nH0: BinaryRel y x\n\nx = y"], "next_steps": [{"text": "\n  induction x; induction y; auto; inversion H; inversion H0.", "context": []}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 15, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\n  induction x; induction y; auto; inversion H; inversion H0.", "context": []}, "n_step": 2, "goals": ["x, y: BinarySet\nH: BinaryRel x y\nH0: BinaryRel y x\n\nx = y"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 15, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 18, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["RelationClasses.Transitive BinaryRel"], "next_steps": [{"text": "\n  unfold RelationClasses.Transitive.", "context": []}, {"text": "\n  induction x; induction y; induction z; auto; intros; try apply self_rel;\n    try inversion H; try inversion H0.", "context": []}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 18, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\n  unfold RelationClasses.Transitive.", "context": []}, "n_step": 2, "goals": ["RelationClasses.Transitive BinaryRel"], "next_steps": [{"text": "\n  induction x; induction y; induction z; auto; intros; try apply self_rel;\n    try inversion H; try inversion H0.", "context": []}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 18, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\n  induction x; induction y; induction z; auto; intros; try apply self_rel;\n    try inversion H; try inversion H0.", "context": []}, "n_step": 3, "goals": ["forall x y z : BinarySet, BinaryRel x y -> BinaryRel y z -> BinaryRel x z"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 18, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 4, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 51, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold meet_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, "n_step": 1, "goals": ["a, b: BinarySet\n\nmeet_BinarySet a b = meet_BinarySet b a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 51, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 2, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 54, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b, c: BinarySet\n\nmeet_BinarySet (meet_BinarySet a b) c = meet_BinarySet a (meet_BinarySet b c)"], "next_steps": [{"text": "\n  unfold meet_BinarySet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 54, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold meet_BinarySet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, "n_step": 2, "goals": ["a, b, c: BinarySet\n\nmeet_BinarySet (meet_BinarySet a b) c = meet_BinarySet a (meet_BinarySet b c)"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 54, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 57, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BinarySet\n\nmeet_BinarySet a (join_BinarySet a b) = a"], "next_steps": [{"text": "\n  unfold meet_BinarySet; unfold join_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 57, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold meet_BinarySet; unfold join_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "n_step": 2, "goals": ["a, b: BinarySet\n\nmeet_BinarySet a (join_BinarySet a b) = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 57, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 60, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a: BinarySet\n\nmeet_BinarySet a a = a"], "next_steps": [{"text": "\n  unfold meet_BinarySet; induction a; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 60, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold meet_BinarySet; induction a; auto.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, "n_step": 2, "goals": ["a: BinarySet\n\nmeet_BinarySet a a = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 60, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 63, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BinarySet\n\njoin_BinarySet a b = join_BinarySet b a"], "next_steps": [{"text": "\n  unfold join_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 63, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold join_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "n_step": 2, "goals": ["a, b: BinarySet\n\njoin_BinarySet a b = join_BinarySet b a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 63, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 66, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b, c: BinarySet\n\njoin_BinarySet (join_BinarySet a b) c = join_BinarySet a (join_BinarySet b c)"], "next_steps": [{"text": "\n  unfold join_BinarySet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 66, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold join_BinarySet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "n_step": 2, "goals": ["a, b, c: BinarySet\n\njoin_BinarySet (join_BinarySet a b) c = join_BinarySet a (join_BinarySet b c)"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 66, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 69, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BinarySet\n\njoin_BinarySet a (meet_BinarySet a b) = a"], "next_steps": [{"text": "\n  unfold join_BinarySet; unfold meet_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 69, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold join_BinarySet; unfold meet_BinarySet; induction a; induction b; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, "n_step": 2, "goals": ["a, b: BinarySet\n\njoin_BinarySet a (meet_BinarySet a b) = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 69, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 72, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a: BinarySet\n\njoin_BinarySet a a = a"], "next_steps": [{"text": "\n  unfold join_BinarySet; induction a; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 72, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\n  unfold join_BinarySet; induction a; auto.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "n_step": 2, "goals": ["a: BinarySet\n\njoin_BinarySet a a = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 72, "context": [{"text": "Inductive BinarySet : Set := | top | bottom.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\n  split.", "context": []}, "n_step": 1, "goals": ["a, b: BinarySet\n\nBinaryRel a b <-> a = meet_BinarySet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet; inversion H.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\n  -", "context": []}, "n_step": 2, "goals": ["a, b: BinarySet\n\nBinaryRel a b -> a = meet_BinarySet a b", "a, b: BinarySet\n\na = meet_BinarySet a b -> BinaryRel a b"], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet; inversion H.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " intros.", "context": []}, "n_step": 3, "goals": ["a, b: BinarySet\n\nBinaryRel a b -> a = meet_BinarySet a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold meet_BinarySet; inversion H.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " induction a; induction b; auto; unfold meet_BinarySet; inversion H.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}]}, "n_step": 4, "goals": ["a, b: BinarySet\nH: BinaryRel a b\n\na = meet_BinarySet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\n  -", "context": []}, "n_step": 5, "goals": [], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " intros.", "context": []}, "n_step": 6, "goals": ["a, b: BinarySet\n\na = meet_BinarySet a b -> BinaryRel a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " induction a; induction b; auto; unfold meet_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition meet_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | top => b | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 24}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "n_step": 7, "goals": ["a, b: BinarySet\nH: a = meet_BinarySet a b\n\nBinaryRel a b"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 77, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 8, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BinarySet\n\nBinaryRel a b <-> b = join_BinarySet a b"], "next_steps": [{"text": "\n  split.", "context": []}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet; inversion H.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\n  split.", "context": []}, "n_step": 2, "goals": ["a, b: BinarySet\n\nBinaryRel a b <-> b = join_BinarySet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet; inversion H.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\n  -", "context": []}, "n_step": 3, "goals": ["a, b: BinarySet\n\nBinaryRel a b -> b = join_BinarySet a b", "a, b: BinarySet\n\nb = join_BinarySet a b -> BinaryRel a b"], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet; inversion H.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " intros.", "context": []}, "n_step": 4, "goals": ["a, b: BinarySet\n\nBinaryRel a b -> b = join_BinarySet a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold join_BinarySet; inversion H.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " induction a; induction b; auto; unfold join_BinarySet; inversion H.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}]}, "n_step": 5, "goals": ["a, b: BinarySet\nH: BinaryRel a b\n\nb = join_BinarySet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\n  -", "context": []}, "n_step": 6, "goals": [], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " intros.", "context": []}, "n_step": 7, "goals": ["a, b: BinarySet\n\nb = join_BinarySet a b -> BinaryRel a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": " induction a; induction b; auto; unfold join_BinarySet in H; inversion H;\n    try apply bot_rel; try apply top_rel.", "context": [{"text": "Definition join_BinarySet (a : BinarySet) (b : BinarySet) : BinarySet := match a with | bottom => b | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 30}, {"text": "Inductive BinaryRel : BinarySet -> BinarySet -> Prop := | bot_rel x : BinaryRel bottom x | top_rel x : BinaryRel x top.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 6}]}, "n_step": 8, "goals": ["a, b: BinarySet\nH: b = join_BinarySet a b\n\nBinaryRel a b"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 83, "context": [{"text": "Program Instance BinaryOrder : Order BinarySet := { ord := BinaryRel }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 10}, {"text": "Program Instance BinaryLattice : Lattice BinarySet := { meet := meet_BinarySet; join := join_BinarySet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BinaryLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 36}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 9, "goals": [], "next_steps": []}

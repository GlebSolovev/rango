{"term": {"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, "step": {"text": "\nProof.", "context": []}, "n_step": 1, "goals": ["forall (A B : Type) (x : A) (v : B), t_empty v x = v"], "next_steps": [{"text": "\n  intros.", "context": []}, {"text": "\n  unfold t_empty.", "context": [{"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, {"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, "step": {"text": "\n  intros.", "context": []}, "n_step": 2, "goals": ["forall (A B : Type) (x : A) (v : B), t_empty v x = v"], "next_steps": [{"text": "\n  unfold t_empty.", "context": [{"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, {"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, "step": {"text": "\n  unfold t_empty.", "context": [{"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, "n_step": 3, "goals": ["A: Type\nB: Type\nx: A\nv: B\n\nt_empty v x = v"], "next_steps": [{"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, "step": {"text": " reflexivity.", "context": []}, "n_step": 4, "goals": ["A: Type\nB: Type\nx: A\nv: B\n\nv = v"], "next_steps": [{"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition t_empty {A} {B} (v:B) : total_map A B := fun (_ : A) => v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 9}]}, "step": {"text": "\nQed.", "context": []}, "n_step": 5, "goals": [], "next_steps": []}
{"term": {"text": "Lemma apply_empty : forall A B x, @empty A B x = None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 100, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}, {"text": "#[universes(template)] Inductive option (A:Type) : Type := | Some : A -> option A | None : option A.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Datatypes.v", "module": [], "type": "TermType.INDUCTIVE", "line": 182}]}, "step": {"text": "\nProof.", "context": []}, "n_step": 1, "goals": ["forall (A B : Type) (x : A), empty x = None"], "next_steps": [{"text": "\n  intros.", "context": []}, {"text": " unfold empty.", "context": [{"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}]}, {"text": " rewrite t_apply_empty.", "context": [{"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13}]}, {"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma apply_empty : forall A B x, @empty A B x = None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 100, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}, {"text": "#[universes(template)] Inductive option (A:Type) : Type := | Some : A -> option A | None : option A.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Datatypes.v", "module": [], "type": "TermType.INDUCTIVE", "line": 182}]}, "step": {"text": "\n  intros.", "context": []}, "n_step": 2, "goals": ["forall (A B : Type) (x : A), empty x = None"], "next_steps": [{"text": " unfold empty.", "context": [{"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}]}, {"text": " rewrite t_apply_empty.", "context": [{"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13}]}, {"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma apply_empty : forall A B x, @empty A B x = None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 100, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}, {"text": "#[universes(template)] Inductive option (A:Type) : Type := | Some : A -> option A | None : option A.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Datatypes.v", "module": [], "type": "TermType.INDUCTIVE", "line": 182}]}, "step": {"text": " unfold empty.", "context": [{"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}]}, "n_step": 3, "goals": ["A: Type\nB: Type\nx: A\n\nempty x = None"], "next_steps": [{"text": " rewrite t_apply_empty.", "context": [{"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13}]}, {"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma apply_empty : forall A B x, @empty A B x = None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 100, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}, {"text": "#[universes(template)] Inductive option (A:Type) : Type := | Some : A -> option A | None : option A.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Datatypes.v", "module": [], "type": "TermType.INDUCTIVE", "line": 182}]}, "step": {"text": " rewrite t_apply_empty.", "context": [{"text": "Lemma t_apply_empty: forall A B x v, @t_empty A B v x = v.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 13}]}, "n_step": 4, "goals": ["A: Type\nB: Type\nx: A\n\nt_empty None x = None"], "next_steps": [{"text": " reflexivity.", "context": []}, {"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma apply_empty : forall A B x, @empty A B x = None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 100, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}, {"text": "#[universes(template)] Inductive option (A:Type) : Type := | Some : A -> option A | None : option A.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Datatypes.v", "module": [], "type": "TermType.INDUCTIVE", "line": 182}]}, "step": {"text": " reflexivity.", "context": []}, "n_step": 5, "goals": ["A: Type\nB: Type\nx: A\n\nNone = None"], "next_steps": [{"text": "\nQed.", "context": []}]}
{"term": {"text": "Lemma apply_empty : forall A B x, @empty A B x = None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.LEMMA", "line": 100, "context": [{"text": "Notation \"x = y\" := (eq x y) : type_scope.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Logic.v", "module": [], "type": "TermType.NOTATION", "line": 388}, {"text": "Definition empty {A B: Type} : partial_map A B := t_empty None.", "file_path": "repos/yalhessi-verified-verifier/Maps.v", "module": [], "type": "TermType.DEFINITION", "line": 88}, {"text": "#[universes(template)] Inductive option (A:Type) : Type := | Some : A -> option A | None : option A.", "file_path": "../root/.opam/default/lib/coq/theories/Init/Datatypes.v", "module": [], "type": "TermType.INDUCTIVE", "line": 182}]}, "step": {"text": "\nQed.", "context": []}, "n_step": 6, "goals": [], "next_steps": []}

{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 13, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\n  unfold RelationClasses.Reflexive.", "context": []}, "n_step": 1, "goals": ["RelationClasses.Reflexive BoundedRel"], "next_steps": [{"text": "\n  apply self_rel.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 13, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\n  apply self_rel.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "n_step": 2, "goals": ["forall x : BoundedSet, BoundedRel x x"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 13, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 17, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["x, y: BoundedSet\nH: BoundedRel x y\nH0: BoundedRel y x\n\nx = y"], "next_steps": [{"text": "\n  induction x; induction y; auto; inversion H; inversion H0.", "context": []}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 17, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\n  induction x; induction y; auto; inversion H; inversion H0.", "context": []}, "n_step": 2, "goals": ["x, y: BoundedSet\nH: BoundedRel x y\nH0: BoundedRel y x\n\nx = y"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 17, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 20, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["RelationClasses.Transitive BoundedRel"], "next_steps": [{"text": "\n  unfold RelationClasses.Transitive.", "context": []}, {"text": "\n  induction x; induction y; induction z; auto; intros; try apply self_rel;\n    try inversion H; try inversion H0.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\n  apply bot_rel.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 20, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\n  unfold RelationClasses.Transitive.", "context": []}, "n_step": 2, "goals": ["RelationClasses.Transitive BoundedRel"], "next_steps": [{"text": "\n  induction x; induction y; induction z; auto; intros; try apply self_rel;\n    try inversion H; try inversion H0.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\n  apply bot_rel.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 20, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\n  induction x; induction y; induction z; auto; intros; try apply self_rel;\n    try inversion H; try inversion H0.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "n_step": 3, "goals": ["forall x y z : BoundedSet, BoundedRel x y -> BoundedRel y z -> BoundedRel x z"], "next_steps": [{"text": "\n  apply bot_rel.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 20, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\n  apply bot_rel.", "context": [{"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "n_step": 4, "goals": ["H: BoundedRel bottom bounded\nH0: BoundedRel bounded top\nx: BoundedSet\nH2: x = bounded\n\nBoundedRel bottom top"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 20, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 5, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 64, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold meet_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, "n_step": 1, "goals": ["a, b: BoundedSet\n\nmeet_BoundedSet a b = meet_BoundedSet b a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 64, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 2, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 67, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b, c: BoundedSet\n\nmeet_BoundedSet (meet_BoundedSet a b) c =\nmeet_BoundedSet a (meet_BoundedSet b c)"], "next_steps": [{"text": "\n  unfold meet_BoundedSet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 67, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold meet_BoundedSet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, "n_step": 2, "goals": ["a, b, c: BoundedSet\n\nmeet_BoundedSet (meet_BoundedSet a b) c =\nmeet_BoundedSet a (meet_BoundedSet b c)"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 67, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 70, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BoundedSet\n\nmeet_BoundedSet a (join_BoundedSet a b) = a"], "next_steps": [{"text": "\n  unfold meet_BoundedSet; unfold join_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 70, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold meet_BoundedSet; unfold join_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "n_step": 2, "goals": ["a, b: BoundedSet\n\nmeet_BoundedSet a (join_BoundedSet a b) = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 70, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 73, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a: BoundedSet\n\nmeet_BoundedSet a a = a"], "next_steps": [{"text": "\n  unfold meet_BoundedSet; induction a; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 73, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold meet_BoundedSet; induction a; auto.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, "n_step": 2, "goals": ["a: BoundedSet\n\nmeet_BoundedSet a a = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 73, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 76, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BoundedSet\n\njoin_BoundedSet a b = join_BoundedSet b a"], "next_steps": [{"text": "\n  unfold join_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 76, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold join_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "n_step": 2, "goals": ["a, b: BoundedSet\n\njoin_BoundedSet a b = join_BoundedSet b a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 76, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 79, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b, c: BoundedSet\n\njoin_BoundedSet (join_BoundedSet a b) c =\njoin_BoundedSet a (join_BoundedSet b c)"], "next_steps": [{"text": "\n  unfold join_BoundedSet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 79, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold join_BoundedSet; induction a; induction b; induction c; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "n_step": 2, "goals": ["a, b, c: BoundedSet\n\njoin_BoundedSet (join_BoundedSet a b) c =\njoin_BoundedSet a (join_BoundedSet b c)"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 79, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 82, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BoundedSet\n\njoin_BoundedSet a (meet_BoundedSet a b) = a"], "next_steps": [{"text": "\n  unfold join_BoundedSet; unfold meet_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 82, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold join_BoundedSet; unfold meet_BoundedSet; induction a; induction b; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, "n_step": 2, "goals": ["a, b: BoundedSet\n\njoin_BoundedSet a (meet_BoundedSet a b) = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 82, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 85, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a: BoundedSet\n\njoin_BoundedSet a a = a"], "next_steps": [{"text": "\n  unfold join_BoundedSet; induction a; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 85, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\n  unfold join_BoundedSet; induction a; auto.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "n_step": 2, "goals": ["a: BoundedSet\n\njoin_BoundedSet a a = a"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 85, "context": [{"text": "Inductive BoundedSet : Set := | top | bounded | bottom.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 2}, {"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 3, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\n  split.", "context": []}, "n_step": 1, "goals": ["a, b: BoundedSet\n\nBoundedRel a b <-> a = meet_BoundedSet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet; inversion H.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\n  -", "context": []}, "n_step": 2, "goals": ["a, b: BoundedSet\n\nBoundedRel a b -> a = meet_BoundedSet a b", "a, b: BoundedSet\n\na = meet_BoundedSet a b -> BoundedRel a b"], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet; inversion H.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " intros.", "context": []}, "n_step": 3, "goals": ["a, b: BoundedSet\n\nBoundedRel a b -> a = meet_BoundedSet a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold meet_BoundedSet; inversion H.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " induction a; induction b; auto; unfold meet_BoundedSet; inversion H.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}]}, "n_step": 4, "goals": ["a, b: BoundedSet\nH: BoundedRel a b\n\na = meet_BoundedSet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\n  -", "context": []}, "n_step": 5, "goals": [], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " intros.", "context": []}, "n_step": 6, "goals": ["a, b: BoundedSet\n\na = meet_BoundedSet a b -> BoundedRel a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " induction a; induction b; auto; unfold meet_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition meet_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | top => b | bounded => match b with | top => bounded | _ => b end | bottom => bottom end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 27}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "n_step": 7, "goals": ["a, b: BoundedSet\nH: a = meet_BoundedSet a b\n\nBoundedRel a b"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 90, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 8, "goals": [], "next_steps": []}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " Proof.", "context": []}, "n_step": 1, "goals": ["a, b: BoundedSet\n\nBoundedRel a b <-> b = join_BoundedSet a b"], "next_steps": [{"text": "\n  split.", "context": []}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet; inversion H.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\n  split.", "context": []}, "n_step": 2, "goals": ["a, b: BoundedSet\n\nBoundedRel a b <-> b = join_BoundedSet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet; inversion H.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\n  -", "context": []}, "n_step": 3, "goals": ["a, b: BoundedSet\n\nBoundedRel a b -> b = join_BoundedSet a b", "a, b: BoundedSet\n\nb = join_BoundedSet a b -> BoundedRel a b"], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet; inversion H.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " intros.", "context": []}, "n_step": 4, "goals": ["a, b: BoundedSet\n\nBoundedRel a b -> b = join_BoundedSet a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold join_BoundedSet; inversion H.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, {"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " induction a; induction b; auto; unfold join_BoundedSet; inversion H.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}]}, "n_step": 5, "goals": ["a, b: BoundedSet\nH: BoundedRel a b\n\nb = join_BoundedSet a b"], "next_steps": [{"text": "\n  -", "context": []}, {"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\n  -", "context": []}, "n_step": 6, "goals": [], "next_steps": [{"text": " intros.", "context": []}, {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " intros.", "context": []}, "n_step": 7, "goals": ["a, b: BoundedSet\n\nb = join_BoundedSet a b -> BoundedRel a b"], "next_steps": [{"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, {"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": " induction a; induction b; auto; unfold join_BoundedSet in H; inversion H;\n    try apply bot_rel; try apply self_rel; try apply bounded_top_rel.", "context": [{"text": "Definition join_BoundedSet (a : BoundedSet) (b : BoundedSet) : BoundedSet := match a with | bottom => b | bounded => match b with | bottom => bounded | _ => b end | top => top end.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.DEFINITION", "line": 38}, {"text": "Inductive BoundedRel : BoundedSet -> BoundedSet -> Prop := | bot_rel x : BoundedRel bottom x | self_rel x : BoundedRel x x | bounded_top_rel : BoundedRel bounded top.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INDUCTIVE", "line": 7}]}, "n_step": 8, "goals": ["a, b: BoundedSet\nH: b = join_BoundedSet a b\n\nBoundedRel a b"], "next_steps": [{"text": "\nDefined.", "context": []}]}
{"term": {"text": "Next Obligation.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.OBLIGATION", "line": 96, "context": [{"text": "Program Instance BoundedOrder : Order BoundedSet := { ord := BoundedRel }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 12}, {"text": "Program Instance BoundedLattice : Lattice BoundedSet := { meet := meet_BoundedSet; join := join_BoundedSet; (*meet_commutative : forall a b, a \u2293 b = b \u2293 a; meet_associative : forall a b c, (a \u2293 b) \u2293 c = a \u2293 (b \u2293 c); meet_absorptive : forall a b, a \u2293 (a \u2294 b) = a; meet_idempotent : forall a, a \u2293 a = a; join_commutative : forall a b, a \u2294 b = b \u2294 a; join_associative : forall a b c, (a \u2294 b) \u2294 c = a \u2294 (b \u2294 c); join_absorptive : forall a b, a \u2294 (a \u2293 b) = a; join_idempotent : forall a, a \u2294 a = a*) }.", "file_path": "repos/yalhessi-verified-verifier/BoundedLattice.v", "module": [], "type": "TermType.INSTANCE", "line": 49}]}, "step": {"text": "\nDefined.", "context": []}, "n_step": 9, "goals": [], "next_steps": []}

opam-version: "2.0"
compiler: ["ocaml-base-compiler.5.2.0"]
roots: [
  "coq.8.17.0"
  "coq-diaframe.dev.2023-06-15.0.1c3b5549"
  "coq-elpi.dev"
  "coq-equations.1.3+8.17"
  "coq-hott.8.18"
  "coq-lsp.0.2.0+8.17"
  "ocaml-base-compiler.5.2.0"
]
installed: [
  "angstrom.0.16.1"
  "atd.2.15.0"
  "atdgen.2.15.0"
  "atdgen-runtime.2.15.0"
  "atdts.2.15.0"
  "base.v0.17.1"
  "base-bigarray.base"
  "base-domains.base"
  "base-nnp.base"
  "base-threads.base"
  "base-unix.base"
  "bigstringaf.0.10.0"
  "biniou.1.2.2"
  "camlp-streams.5.0.1"
  "cmdliner.1.3.0"
  "conf-gmp.4"
  "conf-pkg-config.3"
  "coq.8.17.0"
  "coq-core.8.17.0"
  "coq-diaframe.dev.2023-06-15.0.1c3b5549"
  "coq-elpi.dev"
  "coq-equations.1.3+8.17"
  "coq-hott.8.18"
  "coq-iris.dev.2023-06-14.0.f0e415b6"
  "coq-lsp.0.2.0+8.17"
  "coq-stdlib.8.17.0"
  "coq-stdpp.dev.2023-06-01.0.d1254759"
  "coqide-server.8.17.0"
  "cppo.1.7.0"
  "csexp.1.5.2"
  "dune.3.16.0"
  "dune-build-info.3.16.0"
  "dune-configurator.3.16.0"
  "easy-format.1.3.4"
  "elpi.1.16.10"
  "host-arch-x86_64.1"
  "host-system-other.1"
  "jane-street-headers.v0.17.0"
  "jst-config.v0.17.0"
  "menhir.20240715"
  "menhirCST.20240715"
  "menhirLib.20240715"
  "menhirSdk.20240715"
  "num.1.5-1"
  "ocaml.5.2.0"
  "ocaml-base-compiler.5.2.0"
  "ocaml-compiler-libs.v0.17.0"
  "ocaml-config.3"
  "ocaml-options-vanilla.1"
  "ocaml-syntax-shims.1.0.0"
  "ocaml_intrinsics_kernel.v0.17.1"
  "ocamlfind.1.9.6"
  "parsexp.v0.17.0"
  "ppx_assert.v0.17.0"
  "ppx_base.v0.17.0"
  "ppx_cold.v0.17.0"
  "ppx_compare.v0.17.0"
  "ppx_derivers.1.2.1"
  "ppx_deriving.6.0.2"
  "ppx_deriving_yojson.3.9.0"
  "ppx_enumerate.v0.17.0"
  "ppx_globalize.v0.17.0"
  "ppx_hash.v0.17.0"
  "ppx_here.v0.17.0"
  "ppx_import.1.11.0"
  "ppx_inline_test.v0.17.0"
  "ppx_optcomp.v0.17.0"
  "ppx_sexp_conv.v0.17.0"
  "ppxlib.0.33.0"
  "ppxlib_jane.v0.17.0"
  "re.1.12.0"
  "result.1.5"
  "seq.base"
  "sexplib.v0.17.0"
  "sexplib0.v0.17.0"
  "stdio.v0.17.0"
  "stdlib-shims.0.3.0"
  "stringext.1.6.0"
  "time_now.v0.17.0"
  "uri.4.4.0"
  "yojson.2.2.2"
  "zarith.1.14"
]
pinned: ["coq.8.17.0" "coq-elpi.dev"]
package "coq-elpi" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "Elpi extension language for Coq"
  description: """\
Coq-elpi provides a Coq plugin that embeds ELPI.
It also provides a way to embed Coq's terms into λProlog using
the Higher-Order Abstract Syntax approach
and a way to read terms back.  In addition to that it exports to ELPI a
set of Coq's primitives, e.g. printing a message, accessing the
environment of theorems and data types, defining a new constant and so on.
For convenience it also provides a quotation and anti-quotation for Coq's
syntax in λProlog.  E.g. `{{nat}}` is expanded to the type name of natural
numbers, or `{{A -> B}}` to the representation of a product by unfolding
 the `->` notation. Finally it provides a way to define new vernacular commands
and
new tactics."""
  maintainer: "Enrico Tassi <enrico.tassi@inria.fr>"
  authors: "Enrico Tassi"
  license: "LGPL-2.1-or-later"
  tags: [
    "category:Miscellaneous/Coq Extensions"
    "keyword:λProlog"
    "keyword:higher order abstract syntax"
    "logpath:elpi"
  ]
  homepage: "https://github.com/LPCIC/coq-elpi"
  bug-reports: "https://github.com/LPCIC/coq-elpi/issues"
  depends: [
    "stdlib-shims"
    "elpi" {>= "1.16.5" & < "1.17.0~"}
    "coq" {>= "8.17" & < "8.18~"}
  ]
  build: [
    [
      make
      "build"
      "COQBIN=%{bin}%/"
      "ELPIDIR=%{prefix}%/lib/elpi"
      "OCAMLWARN="
    ]
    [make "test" "COQBIN=%{bin}%/" "ELPIDIR=%{prefix}%/lib/elpi"] {with-test}
  ]
  install: [make "install" "COQBIN=%{bin}%/" "ELPIDIR=%{prefix}%/lib/elpi"]
  dev-repo: "git+https://github.com/LPCIC/coq-elpi"
  url {
    src:
      "https://github.com/ecranceMERCE/coq-elpi/archive/refs/heads/strat.tar.gz"
  }
}

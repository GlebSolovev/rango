
thm_info:
  #The height of the board is positive
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: h_pos

  # The width of the board is positive
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: w_pos

  # # Positions on the board are antisymmetric
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: pos_test_anti_sym

  # # # If some literal l1 is in the list resulting from inserting another literal l2
  # # # into a clause, then the literals must be equal, or l1 must have been in the original clause
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: lit_insert_in

  # ## Anything choose 0 is 1
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def1
    
  # ## n choose m with n < m is 0
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def2

  # ## n choose n is 1 
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def3

  # ## Pascals identity 
  test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  theorem_name: binomial_def4
    
  # ## Contropositive of monotononicity
  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/sqrt2.v 
  # theorem_name: monotonic_inverse
    
  ## Weird equality (3 * p - 4 * q) * (3 * p - 4 * q) = 2 * ((3 * q - 2 * p) * (3 * q - 2 * p)).
  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/sqrt2.v 
  # theorem_name: new_equality 
    
  # ## If the absolute value of the difference is 0, then the ints are the same
  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/Qabs.v 
  # theorem_name: Qabs_Qminus_Zero_eq


  data_loc: raw-data/coq-dataset
  sentence_db_loc: sentences.db
  data_split_loc: splits/final-split.json


# tactic_gen:
#   alias: client
#   urls: [http://localhost:8000]
#   # formatter:
#   #   alias: proof
#   #   proof_bank_loc: proof-goals
#   #   n_step_sampler:
#   #     alias: one

#   formatter:
#     alias: premise
#     premise_conf:
#       alias: tfidf
#       context_format_alias: basic
#       premise_format_alias: basic
#       premise_filter:
#         coq_excludes: []    
#         non_coq_excludes: []
#         general_excludes: []
#     n_step_sampler:
#       alias: one

tactic_gen:
  alias: openai
  formatter:
    alias: gpt-proof
    proof_bank_loc: proof-goals
    data_loc: raw-data/coq-dataset
    sentence_db_loc: sentences.db
  model_name: "gpt-3.5-turbo"

n_attempts: 1


thm_info:
  #The height of the board is positive
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: h_pos

  # The width of the board is positive
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: w_pos

  # # Positions on the board are antisymmetric
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: pos_test_anti_sym

  # # # If some literal l1 is in the list resulting from inserting another literal l2
  # # # into a clause, then the literals must be equal, or l1 must have been in the original clause
  # test_file: raw-data/coq-dataset/repos/coq-community-sudoku/theories/Sudoku.v
  # theorem_name: lit_insert_in

  # ## Anything choose 0 is 1
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def1
    
  ## n choose m with n < m is 0
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def2

  # ## n choose n is 1 
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def3

  # ## Pascals identity 
  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Binomial.v
  # theorem_name: binomial_def4

  # test_file: raw-data/coq-dataset/repos/coq-community-bertrand/theories/Div.v
  # theorem_name: div_le

  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/Q_denumerable.v
  # theorem_name: is_denumerable_transitive

  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/Q_denumerable.v
  # theorem_name: is_denumerable_transitive

  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/Q_ordered_field_properties.v
  # theorem_name: Qinv_resp_nonzero_Qdiv

  test_file: raw-data/coq-dataset/repos/coq-community-coqeal/refinements/rational.v
  theorem_name: RratE
    
  # ## Contropositive of monotononicity
  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/sqrt2.v 
  # theorem_name: monotonic_inverse
    
  ## Weird equality (3 * p - 4 * q) * (3 * p - 4 * q) = 2 * ((3 * q - 2 * p) * (3 * q - 2 * p)).
  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/sqrt2.v 
  # theorem_name: new_equality 
    
  # ## If the absolute value of the difference is 0, then the ints are the same
  # test_file: raw-data/coq-dataset/repos/coq-community-qarith-stern-brocot/theories/Qabs.v 
  # theorem_name: Qabs_Qminus_Zero_eq


  data_loc: raw-data/coq-dataset
  sentence_db_loc: sentences.db
  data_split_loc: splits/final-split.json

search:
  node_score_alias: token-normalized-score 
  max_branch: 32
  max_expansions: 500
  depth_limit: 30
  timeout: 120
  # initial_proof: "\n
  # intros m n H.\n
  # unfold div, pdiv.\n
  # remember (pdiv_aux m n m) as p.\n
  # destruct p as (d, r).\n
  # remember (ominus m n) as m_sub_n.\n
  # destruct m_sub_n. "  

# tactic_gen:
#   alias: client
#   urls: [http://localhost:8000]
#   formatters:
#     - alias: basic
#       n_step_sampler: 
#         alias: one

  # formatter:
  #   alias: proof
  #   proof_bank_loc: proof-goals
  #   n_step_sampler:
  #     alias: one

#   formatter:
#     alias: premise
#     premise_conf:
#       alias: tfidf
#       context_format_alias: basic
#       premise_format_alias: basic
#       premise_filter:
#         coq_excludes: []    
#         non_coq_excludes: []
#         general_excludes: []
#     n_step_sampler:
#       alias: one

# tactic_gen:
#   alias: fid
#   checkpoint_loc: models/t5-fid-small-premise-final/checkpoint-92000

# tactic_gen:
#   alias: fid
#   checkpoint_loc: models/t5-fid-small-proof-ret-final/checkpoint-107500

# tactic_gen:
#   alias: fid
#   checkpoint_loc: models/t5-fid-base-tpe2k-final/checkpoint-130000

tactic_gen:
  alias: fid
  checkpoint_loc: models/t5-fid-small-whole-proof-ret/checkpoint-110500

# tactic_gen:
#   alias: fid
#   checkpoint_loc: models/t5-fid-base-basic-final/checkpoint-110500

# tactic_gen:
#   alias: fid
#   checkpoint_loc: models/t5-fid-small-basic-final/checkpoint-110500

print_proofs: True
print_trees: True 